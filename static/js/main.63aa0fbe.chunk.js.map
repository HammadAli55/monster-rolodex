{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","toLocaleLowerCase","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UAEI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,UALD,ECCZC,G,MAAW,SAAAR,GACpB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAEtB,aADJ,CACK,EAAD,CAAyBA,QAASA,GAArBA,EAAQC,GAFC,KAOzC,GCZYO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,OACLF,YAAeA,EACfG,SAAYF,GALK,GC0CVG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAeFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,OACtC,EAhBC,EAAKC,MAAQ,CACXb,SAAW,GACXU,YAAa,IAJH,CAMb,C,qDAED,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,GAA5B,GACZ,G,oBAQD,WACE,MAAgCC,KAAKN,MAA9Bb,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,YACXU,EAAiBpB,EAASqB,QAC9B,SAAA3B,GAAO,OAAIA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYc,oBAApD,IAET,OACE,sBAAKhC,UAAY,MAAjB,UACE,0CACA,cAAC,EAAD,CACEW,YAAc,iBACdC,aAAgBe,KAAKf,eAEvB,cAAC,EAAD,CAAUJ,SAAUoB,MAGzB,K,GApCeK,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,ECJDO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,G","file":"static/js/main.63aa0fbe.chunk.js","sourcesContent":["import React from \"react\";\nimport './card.styles.css'\n\nexport const Card = props => (\n    <div className=\"card-container\">\n        {/* UR: https://robohash.org/9?set=set2 */}\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n);","import React from \"react\";\nimport { Card } from \"../card/card.component\";\nimport './card-list.styles.css'\n\nexport const CardList = props => {\n    return(\n        <div className=\"card-list\">\n            {\n                props.monsters.map(monster=>(\n                // key helps react which element has been updated, no need to rerender everything \n                    <Card key = {monster.id} monster={monster}/>\n                ))\n            }\n        </div>\n    )\n}  ","import React from \"react\";\nimport './search-box.style.css'\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input \n        className=\"search\" \n        type=\"text\"\n        placeholder = {placeholder}\n        onChange = {handleChange} \n    />\n);","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './search-box/search-box.component';\n\nclass App extends React.Component{\n  constructor() {\n    super();\n    this.state = {\n      monsters : [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}))\n  }\n\n  // after super() - this.handleChange = this.handleChange.bind(this);\n  // OR\n  handleChange = e => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const filterMonsters = monsters.filter(\n      monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    )\n    return (\n      <div className = 'App'>\n        <h1>Monsters</h1>\n        <SearchBox \n          placeholder = \"Search Monster\" \n          handleChange = {this.handleChange}\n        />\n        <CardList monsters={filterMonsters}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}